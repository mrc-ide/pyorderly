pyorderly.outpack.location_packit
=================================

.. py:module:: pyorderly.outpack.location_packit


Attributes
----------

.. autoapisummary::

   pyorderly.outpack.location_packit.GITHUB_CLIENT_ID
   pyorderly.outpack.location_packit.GITHUB_DEVICE_CODE_URL
   pyorderly.outpack.location_packit.GITHUB_ACCESS_TOKEN_URL


Classes
-------

.. autoapisummary::

   pyorderly.outpack.location_packit.DeviceAuthorizationResponse
   pyorderly.outpack.location_packit.AccessTokenResponse
   pyorderly.outpack.location_packit.ErrorResponse
   pyorderly.outpack.location_packit.OAuthDeviceClient


Functions
---------

.. autoapisummary::

   pyorderly.outpack.location_packit.packit_authorisation
   pyorderly.outpack.location_packit.outpack_location_packit


Module Contents
---------------

.. py:data:: GITHUB_CLIENT_ID
   :value: 'Ov23liUrbkR0qUtAO1zu'


.. py:data:: GITHUB_DEVICE_CODE_URL
   :value: 'https://github.com/login/device/code'


.. py:data:: GITHUB_ACCESS_TOKEN_URL
   :value: 'https://github.com/login/oauth/access_token'


.. py:class:: DeviceAuthorizationResponse

   Bases: :py:obj:`dataclasses_json.DataClassJsonMixin`


   DataClassJsonMixin is an ABC that functions as a Mixin.

   As with other ABCs, it should not be instantiated directly.


   .. py:attribute:: device_code
      :type:  str


   .. py:attribute:: user_code
      :type:  str


   .. py:attribute:: verification_uri
      :type:  str


   .. py:attribute:: expires_in
      :type:  int


   .. py:attribute:: interval
      :type:  Optional[int]
      :value: None



.. py:class:: AccessTokenResponse

   Bases: :py:obj:`dataclasses_json.DataClassJsonMixin`


   DataClassJsonMixin is an ABC that functions as a Mixin.

   As with other ABCs, it should not be instantiated directly.


   .. py:attribute:: access_token
      :type:  str


   .. py:attribute:: token_type
      :type:  str


   .. py:attribute:: expires_in
      :type:  Optional[int]
      :value: None



.. py:class:: ErrorResponse

   Bases: :py:obj:`dataclasses_json.DataClassJsonMixin`


   DataClassJsonMixin is an ABC that functions as a Mixin.

   As with other ABCs, it should not be instantiated directly.


   .. py:attribute:: error
      :type:  str


   .. py:attribute:: error_description
      :type:  Optional[str]
      :value: None



.. py:class:: OAuthDeviceClient(client_id: str, device_code_url: str, access_token_url: str)

   .. py:method:: __enter__()


   .. py:method:: __exit__(*args)


   .. py:method:: authenticate(scope: str) -> AccessTokenResponse


   .. py:method:: start_device_authorization(scope: str) -> DeviceAuthorizationResponse

      Initiate the device authorization flow.

      This function returns a user code and verification URI which should be
      presented to the user. Additionally, it returns a device code which may
      be used to poll the access token endpoint until the authentication flow
      is complete.

      https://datatracker.ietf.org/doc/html/rfc8628#section-3.1
      https://datatracker.ietf.org/doc/html/rfc8628#section-3.2



   .. py:method:: fetch_access_token(parameters: DeviceAuthorizationResponse) -> Union[AccessTokenResponse, ErrorResponse]

      Fetch an access token from the authentication server.

      If authentication succeeds, an AccessTokenResponse is returned.
      Otherwise an ErrorResponse is returned. Depending on the error's code,
      the caller may call this function again (after a delay) to poll for new
      tokens.

      https://datatracker.ietf.org/doc/html/rfc8628#section-3.4
      https://datatracker.ietf.org/doc/html/rfc8628#section-3.5



   .. py:method:: poll_access_token(parameters: DeviceAuthorizationResponse) -> AccessTokenResponse


.. py:function:: packit_authorisation(url: str, token: Optional[str]) -> Dict[str, str]

.. py:function:: outpack_location_packit(url: str, token: Optional[str] = None) -> pyorderly.outpack.location_http.OutpackLocationHTTP

